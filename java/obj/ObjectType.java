// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: object.proto
// Protobuf Java Version: 4.28.2

package obj;

/**
 * <pre>
 * ------------------- CORE MESSAGES -------------------
 * </pre>
 *
 * Protobuf enum {@code object.ObjectType}
 */
public enum ObjectType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_OBJECT = 0;</code>
   */
  UNKNOWN_OBJECT(0),
  /**
   * <code>ITEM = 1;</code>
   */
  ITEM(1),
  /**
   * <code>TYPE = 2;</code>
   */
  TYPE(2),
  /**
   * <code>GROUP = 3;</code>
   */
  GROUP(3),
  /**
   * <code>COMMAND = 4;</code>
   */
  COMMAND(4),
  /**
   * <code>USER = 5;</code>
   */
  USER(5),
  /**
   * <code>EXECUTION = 6;</code>
   */
  EXECUTION(6),
  /**
   * <code>RELATION = 7;</code>
   */
  RELATION(7),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      ObjectType.class.getName());
  }
  /**
   * <code>UNKNOWN_OBJECT = 0;</code>
   */
  public static final int UNKNOWN_OBJECT_VALUE = 0;
  /**
   * <code>ITEM = 1;</code>
   */
  public static final int ITEM_VALUE = 1;
  /**
   * <code>TYPE = 2;</code>
   */
  public static final int TYPE_VALUE = 2;
  /**
   * <code>GROUP = 3;</code>
   */
  public static final int GROUP_VALUE = 3;
  /**
   * <code>COMMAND = 4;</code>
   */
  public static final int COMMAND_VALUE = 4;
  /**
   * <code>USER = 5;</code>
   */
  public static final int USER_VALUE = 5;
  /**
   * <code>EXECUTION = 6;</code>
   */
  public static final int EXECUTION_VALUE = 6;
  /**
   * <code>RELATION = 7;</code>
   */
  public static final int RELATION_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ObjectType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ObjectType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_OBJECT;
      case 1: return ITEM;
      case 2: return TYPE;
      case 3: return GROUP;
      case 4: return COMMAND;
      case 5: return USER;
      case 6: return EXECUTION;
      case 7: return RELATION;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ObjectType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ObjectType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ObjectType>() {
          public ObjectType findValueByNumber(int number) {
            return ObjectType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return obj.Obj.getDescriptor().getEnumTypes().get(0);
  }

  private static final ObjectType[] VALUES = values();

  public static ObjectType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ObjectType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:object.ObjectType)
}

