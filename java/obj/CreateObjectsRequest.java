// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: object.proto
// Protobuf Java Version: 4.28.2

package obj;

/**
 * <pre>
 * ------------------- BATCH/UNIQUE REQUESTS -------------------
 * </pre>
 *
 * Protobuf type {@code object.CreateObjectsRequest}
 */
public final class CreateObjectsRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:object.CreateObjectsRequest)
    CreateObjectsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      CreateObjectsRequest.class.getName());
  }
  // Use CreateObjectsRequest.newBuilder() to construct.
  private CreateObjectsRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CreateObjectsRequest() {
    relation_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return obj.Obj.internal_static_object_CreateObjectsRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 1:
        return internalGetFields();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return obj.Obj.internal_static_object_CreateObjectsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            obj.CreateObjectsRequest.class, obj.CreateObjectsRequest.Builder.class);
  }

  public static final int FIELDS_FIELD_NUMBER = 1;
  private static final class FieldsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                obj.Obj.internal_static_object_CreateObjectsRequest_FieldsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> fields_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetFields() {
    if (fields_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          FieldsDefaultEntryHolder.defaultEntry);
    }
    return fields_;
  }
  public int getFieldsCount() {
    return internalGetFields().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; fields = 1;</code>
   */
  @java.lang.Override
  public boolean containsFields(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetFields().getMap().containsKey(key);
  }
  /**
   * Use {@link #getFieldsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getFields() {
    return getFieldsMap();
  }
  /**
   * <code>map&lt;string, string&gt; fields = 1;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getFieldsMap() {
    return internalGetFields().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; fields = 1;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getFieldsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetFields().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; fields = 1;</code>
   */
  @java.lang.Override
  public java.lang.String getFieldsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetFields().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int COUNT_FIELD_NUMBER = 2;
  private int count_ = 0;
  /**
   * <code>uint32 count = 2;</code>
   * @return The count.
   */
  @java.lang.Override
  public int getCount() {
    return count_;
  }

  public static final int RELATION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<obj.Relation> relation_;
  /**
   * <pre>
   * Optional relations for the objects
   * </pre>
   *
   * <code>repeated .object.Relation relation = 3;</code>
   */
  @java.lang.Override
  public java.util.List<obj.Relation> getRelationList() {
    return relation_;
  }
  /**
   * <pre>
   * Optional relations for the objects
   * </pre>
   *
   * <code>repeated .object.Relation relation = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends obj.RelationOrBuilder> 
      getRelationOrBuilderList() {
    return relation_;
  }
  /**
   * <pre>
   * Optional relations for the objects
   * </pre>
   *
   * <code>repeated .object.Relation relation = 3;</code>
   */
  @java.lang.Override
  public int getRelationCount() {
    return relation_.size();
  }
  /**
   * <pre>
   * Optional relations for the objects
   * </pre>
   *
   * <code>repeated .object.Relation relation = 3;</code>
   */
  @java.lang.Override
  public obj.Relation getRelation(int index) {
    return relation_.get(index);
  }
  /**
   * <pre>
   * Optional relations for the objects
   * </pre>
   *
   * <code>repeated .object.Relation relation = 3;</code>
   */
  @java.lang.Override
  public obj.RelationOrBuilder getRelationOrBuilder(
      int index) {
    return relation_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessage
      .serializeStringMapTo(
        output,
        internalGetFields(),
        FieldsDefaultEntryHolder.defaultEntry,
        1);
    if (count_ != 0) {
      output.writeUInt32(2, count_);
    }
    for (int i = 0; i < relation_.size(); i++) {
      output.writeMessage(3, relation_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetFields().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      fields__ = FieldsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields__);
    }
    if (count_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, count_);
    }
    for (int i = 0; i < relation_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, relation_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof obj.CreateObjectsRequest)) {
      return super.equals(obj);
    }
    obj.CreateObjectsRequest other = (obj.CreateObjectsRequest) obj;

    if (!internalGetFields().equals(
        other.internalGetFields())) return false;
    if (getCount()
        != other.getCount()) return false;
    if (!getRelationList()
        .equals(other.getRelationList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetFields().getMap().isEmpty()) {
      hash = (37 * hash) + FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetFields().hashCode();
    }
    hash = (37 * hash) + COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getCount();
    if (getRelationCount() > 0) {
      hash = (37 * hash) + RELATION_FIELD_NUMBER;
      hash = (53 * hash) + getRelationList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static obj.CreateObjectsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static obj.CreateObjectsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static obj.CreateObjectsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static obj.CreateObjectsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static obj.CreateObjectsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static obj.CreateObjectsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static obj.CreateObjectsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static obj.CreateObjectsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static obj.CreateObjectsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static obj.CreateObjectsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static obj.CreateObjectsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static obj.CreateObjectsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(obj.CreateObjectsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ------------------- BATCH/UNIQUE REQUESTS -------------------
   * </pre>
   *
   * Protobuf type {@code object.CreateObjectsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:object.CreateObjectsRequest)
      obj.CreateObjectsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return obj.Obj.internal_static_object_CreateObjectsRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetFields();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableFields();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return obj.Obj.internal_static_object_CreateObjectsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              obj.CreateObjectsRequest.class, obj.CreateObjectsRequest.Builder.class);
    }

    // Construct using obj.CreateObjectsRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      internalGetMutableFields().clear();
      count_ = 0;
      if (relationBuilder_ == null) {
        relation_ = java.util.Collections.emptyList();
      } else {
        relation_ = null;
        relationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return obj.Obj.internal_static_object_CreateObjectsRequest_descriptor;
    }

    @java.lang.Override
    public obj.CreateObjectsRequest getDefaultInstanceForType() {
      return obj.CreateObjectsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public obj.CreateObjectsRequest build() {
      obj.CreateObjectsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public obj.CreateObjectsRequest buildPartial() {
      obj.CreateObjectsRequest result = new obj.CreateObjectsRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(obj.CreateObjectsRequest result) {
      if (relationBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          relation_ = java.util.Collections.unmodifiableList(relation_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.relation_ = relation_;
      } else {
        result.relation_ = relationBuilder_.build();
      }
    }

    private void buildPartial0(obj.CreateObjectsRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.fields_ = internalGetFields();
        result.fields_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.count_ = count_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof obj.CreateObjectsRequest) {
        return mergeFrom((obj.CreateObjectsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(obj.CreateObjectsRequest other) {
      if (other == obj.CreateObjectsRequest.getDefaultInstance()) return this;
      internalGetMutableFields().mergeFrom(
          other.internalGetFields());
      bitField0_ |= 0x00000001;
      if (other.getCount() != 0) {
        setCount(other.getCount());
      }
      if (relationBuilder_ == null) {
        if (!other.relation_.isEmpty()) {
          if (relation_.isEmpty()) {
            relation_ = other.relation_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRelationIsMutable();
            relation_.addAll(other.relation_);
          }
          onChanged();
        }
      } else {
        if (!other.relation_.isEmpty()) {
          if (relationBuilder_.isEmpty()) {
            relationBuilder_.dispose();
            relationBuilder_ = null;
            relation_ = other.relation_;
            bitField0_ = (bitField0_ & ~0x00000004);
            relationBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getRelationFieldBuilder() : null;
          } else {
            relationBuilder_.addAllMessages(other.relation_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              fields__ = input.readMessage(
                  FieldsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableFields().getMutableMap().put(
                  fields__.getKey(), fields__.getValue());
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              count_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              obj.Relation m =
                  input.readMessage(
                      obj.Relation.parser(),
                      extensionRegistry);
              if (relationBuilder_ == null) {
                ensureRelationIsMutable();
                relation_.add(m);
              } else {
                relationBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> fields_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetFields() {
      if (fields_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FieldsDefaultEntryHolder.defaultEntry);
      }
      return fields_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableFields() {
      if (fields_ == null) {
        fields_ = com.google.protobuf.MapField.newMapField(
            FieldsDefaultEntryHolder.defaultEntry);
      }
      if (!fields_.isMutable()) {
        fields_ = fields_.copy();
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return fields_;
    }
    public int getFieldsCount() {
      return internalGetFields().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    @java.lang.Override
    public boolean containsFields(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetFields().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getFields() {
      return getFieldsMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getFieldsMap() {
      return internalGetFields().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getFieldsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetFields().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getFieldsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetFields().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearFields() {
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableFields().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    public Builder removeFields(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableFields().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableFields() {
      bitField0_ |= 0x00000001;
      return internalGetMutableFields().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    public Builder putFields(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableFields().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 1;</code>
     */
    public Builder putAllFields(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableFields().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000001;
      return this;
    }

    private int count_ ;
    /**
     * <code>uint32 count = 2;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }
    /**
     * <code>uint32 count = 2;</code>
     * @param value The count to set.
     * @return This builder for chaining.
     */
    public Builder setCount(int value) {

      count_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      count_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<obj.Relation> relation_ =
      java.util.Collections.emptyList();
    private void ensureRelationIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        relation_ = new java.util.ArrayList<obj.Relation>(relation_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        obj.Relation, obj.Relation.Builder, obj.RelationOrBuilder> relationBuilder_;

    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public java.util.List<obj.Relation> getRelationList() {
      if (relationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relation_);
      } else {
        return relationBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public int getRelationCount() {
      if (relationBuilder_ == null) {
        return relation_.size();
      } else {
        return relationBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public obj.Relation getRelation(int index) {
      if (relationBuilder_ == null) {
        return relation_.get(index);
      } else {
        return relationBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder setRelation(
        int index, obj.Relation value) {
      if (relationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationIsMutable();
        relation_.set(index, value);
        onChanged();
      } else {
        relationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder setRelation(
        int index, obj.Relation.Builder builderForValue) {
      if (relationBuilder_ == null) {
        ensureRelationIsMutable();
        relation_.set(index, builderForValue.build());
        onChanged();
      } else {
        relationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder addRelation(obj.Relation value) {
      if (relationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationIsMutable();
        relation_.add(value);
        onChanged();
      } else {
        relationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder addRelation(
        int index, obj.Relation value) {
      if (relationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationIsMutable();
        relation_.add(index, value);
        onChanged();
      } else {
        relationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder addRelation(
        obj.Relation.Builder builderForValue) {
      if (relationBuilder_ == null) {
        ensureRelationIsMutable();
        relation_.add(builderForValue.build());
        onChanged();
      } else {
        relationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder addRelation(
        int index, obj.Relation.Builder builderForValue) {
      if (relationBuilder_ == null) {
        ensureRelationIsMutable();
        relation_.add(index, builderForValue.build());
        onChanged();
      } else {
        relationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder addAllRelation(
        java.lang.Iterable<? extends obj.Relation> values) {
      if (relationBuilder_ == null) {
        ensureRelationIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relation_);
        onChanged();
      } else {
        relationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder clearRelation() {
      if (relationBuilder_ == null) {
        relation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        relationBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public Builder removeRelation(int index) {
      if (relationBuilder_ == null) {
        ensureRelationIsMutable();
        relation_.remove(index);
        onChanged();
      } else {
        relationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public obj.Relation.Builder getRelationBuilder(
        int index) {
      return getRelationFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public obj.RelationOrBuilder getRelationOrBuilder(
        int index) {
      if (relationBuilder_ == null) {
        return relation_.get(index);  } else {
        return relationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public java.util.List<? extends obj.RelationOrBuilder> 
         getRelationOrBuilderList() {
      if (relationBuilder_ != null) {
        return relationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relation_);
      }
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public obj.Relation.Builder addRelationBuilder() {
      return getRelationFieldBuilder().addBuilder(
          obj.Relation.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public obj.Relation.Builder addRelationBuilder(
        int index) {
      return getRelationFieldBuilder().addBuilder(
          index, obj.Relation.getDefaultInstance());
    }
    /**
     * <pre>
     * Optional relations for the objects
     * </pre>
     *
     * <code>repeated .object.Relation relation = 3;</code>
     */
    public java.util.List<obj.Relation.Builder> 
         getRelationBuilderList() {
      return getRelationFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        obj.Relation, obj.Relation.Builder, obj.RelationOrBuilder> 
        getRelationFieldBuilder() {
      if (relationBuilder_ == null) {
        relationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            obj.Relation, obj.Relation.Builder, obj.RelationOrBuilder>(
                relation_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        relation_ = null;
      }
      return relationBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:object.CreateObjectsRequest)
  }

  // @@protoc_insertion_point(class_scope:object.CreateObjectsRequest)
  private static final obj.CreateObjectsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new obj.CreateObjectsRequest();
  }

  public static obj.CreateObjectsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateObjectsRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreateObjectsRequest>() {
    @java.lang.Override
    public CreateObjectsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CreateObjectsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreateObjectsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public obj.CreateObjectsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

