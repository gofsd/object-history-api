// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object.proto

package obj;

/**
 * <pre>
 * ------------------- LIST &amp; PAGINATION -------------------
 * </pre>
 *
 * Protobuf type {@code object.ListObjectsRequest}
 */
public final class ListObjectsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:object.ListObjectsRequest)
    ListObjectsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListObjectsRequest.newBuilder() to construct.
  private ListObjectsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListObjectsRequest() {
    relationType_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListObjectsRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return obj.Obj.internal_static_object_ListObjectsRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetFields();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return obj.Obj.internal_static_object_ListObjectsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            obj.ListObjectsRequest.class, obj.ListObjectsRequest.Builder.class);
  }

  public static final int PAGE_FIELD_NUMBER = 1;
  private int page_;
  /**
   * <code>int32 page = 1;</code>
   * @return The page.
   */
  @java.lang.Override
  public int getPage() {
    return page_;
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 2;
  private int pageSize_;
  /**
   * <code>int32 page_size = 2;</code>
   * @return The pageSize.
   */
  @java.lang.Override
  public int getPageSize() {
    return pageSize_;
  }

  public static final int FIELDS_FIELD_NUMBER = 3;
  private static final class FieldsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                obj.Obj.internal_static_object_ListObjectsRequest_FieldsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> fields_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetFields() {
    if (fields_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          FieldsDefaultEntryHolder.defaultEntry);
    }
    return fields_;
  }

  public int getFieldsCount() {
    return internalGetFields().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; fields = 3;</code>
   */

  @java.lang.Override
  public boolean containsFields(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetFields().getMap().containsKey(key);
  }
  /**
   * Use {@link #getFieldsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getFields() {
    return getFieldsMap();
  }
  /**
   * <code>map&lt;string, string&gt; fields = 3;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getFieldsMap() {
    return internalGetFields().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; fields = 3;</code>
   */
  @java.lang.Override

  public java.lang.String getFieldsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetFields().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; fields = 3;</code>
   */
  @java.lang.Override

  public java.lang.String getFieldsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetFields().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int OBJECT_TYPE_FIELD_NUMBER = 4;
  private int objectType_;
  /**
   * <code>int32 object_type = 4;</code>
   * @return The objectType.
   */
  @java.lang.Override
  public int getObjectType() {
    return objectType_;
  }

  public static final int RELATION_TYPE_FIELD_NUMBER = 5;
  private java.util.List<obj.Relation> relationType_;
  /**
   * <code>repeated .object.Relation relation_type = 5;</code>
   */
  @java.lang.Override
  public java.util.List<obj.Relation> getRelationTypeList() {
    return relationType_;
  }
  /**
   * <code>repeated .object.Relation relation_type = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends obj.RelationOrBuilder> 
      getRelationTypeOrBuilderList() {
    return relationType_;
  }
  /**
   * <code>repeated .object.Relation relation_type = 5;</code>
   */
  @java.lang.Override
  public int getRelationTypeCount() {
    return relationType_.size();
  }
  /**
   * <code>repeated .object.Relation relation_type = 5;</code>
   */
  @java.lang.Override
  public obj.Relation getRelationType(int index) {
    return relationType_.get(index);
  }
  /**
   * <code>repeated .object.Relation relation_type = 5;</code>
   */
  @java.lang.Override
  public obj.RelationOrBuilder getRelationTypeOrBuilder(
      int index) {
    return relationType_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (page_ != 0) {
      output.writeInt32(1, page_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(2, pageSize_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetFields(),
        FieldsDefaultEntryHolder.defaultEntry,
        3);
    if (objectType_ != 0) {
      output.writeInt32(4, objectType_);
    }
    for (int i = 0; i < relationType_.size(); i++) {
      output.writeMessage(5, relationType_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (page_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, page_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, pageSize_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetFields().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      fields__ = FieldsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fields__);
    }
    if (objectType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, objectType_);
    }
    for (int i = 0; i < relationType_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, relationType_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof obj.ListObjectsRequest)) {
      return super.equals(obj);
    }
    obj.ListObjectsRequest other = (obj.ListObjectsRequest) obj;

    if (getPage()
        != other.getPage()) return false;
    if (getPageSize()
        != other.getPageSize()) return false;
    if (!internalGetFields().equals(
        other.internalGetFields())) return false;
    if (getObjectType()
        != other.getObjectType()) return false;
    if (!getRelationTypeList()
        .equals(other.getRelationTypeList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PAGE_FIELD_NUMBER;
    hash = (53 * hash) + getPage();
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    if (!internalGetFields().getMap().isEmpty()) {
      hash = (37 * hash) + FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetFields().hashCode();
    }
    hash = (37 * hash) + OBJECT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getObjectType();
    if (getRelationTypeCount() > 0) {
      hash = (37 * hash) + RELATION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getRelationTypeList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static obj.ListObjectsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static obj.ListObjectsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static obj.ListObjectsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static obj.ListObjectsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static obj.ListObjectsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static obj.ListObjectsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static obj.ListObjectsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static obj.ListObjectsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static obj.ListObjectsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static obj.ListObjectsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static obj.ListObjectsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static obj.ListObjectsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(obj.ListObjectsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ------------------- LIST &amp; PAGINATION -------------------
   * </pre>
   *
   * Protobuf type {@code object.ListObjectsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:object.ListObjectsRequest)
      obj.ListObjectsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return obj.Obj.internal_static_object_ListObjectsRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetFields();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableFields();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return obj.Obj.internal_static_object_ListObjectsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              obj.ListObjectsRequest.class, obj.ListObjectsRequest.Builder.class);
    }

    // Construct using obj.ListObjectsRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      page_ = 0;

      pageSize_ = 0;

      internalGetMutableFields().clear();
      objectType_ = 0;

      if (relationTypeBuilder_ == null) {
        relationType_ = java.util.Collections.emptyList();
      } else {
        relationType_ = null;
        relationTypeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return obj.Obj.internal_static_object_ListObjectsRequest_descriptor;
    }

    @java.lang.Override
    public obj.ListObjectsRequest getDefaultInstanceForType() {
      return obj.ListObjectsRequest.getDefaultInstance();
    }

    @java.lang.Override
    public obj.ListObjectsRequest build() {
      obj.ListObjectsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public obj.ListObjectsRequest buildPartial() {
      obj.ListObjectsRequest result = new obj.ListObjectsRequest(this);
      int from_bitField0_ = bitField0_;
      result.page_ = page_;
      result.pageSize_ = pageSize_;
      result.fields_ = internalGetFields();
      result.fields_.makeImmutable();
      result.objectType_ = objectType_;
      if (relationTypeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          relationType_ = java.util.Collections.unmodifiableList(relationType_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.relationType_ = relationType_;
      } else {
        result.relationType_ = relationTypeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof obj.ListObjectsRequest) {
        return mergeFrom((obj.ListObjectsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(obj.ListObjectsRequest other) {
      if (other == obj.ListObjectsRequest.getDefaultInstance()) return this;
      if (other.getPage() != 0) {
        setPage(other.getPage());
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      internalGetMutableFields().mergeFrom(
          other.internalGetFields());
      if (other.getObjectType() != 0) {
        setObjectType(other.getObjectType());
      }
      if (relationTypeBuilder_ == null) {
        if (!other.relationType_.isEmpty()) {
          if (relationType_.isEmpty()) {
            relationType_ = other.relationType_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRelationTypeIsMutable();
            relationType_.addAll(other.relationType_);
          }
          onChanged();
        }
      } else {
        if (!other.relationType_.isEmpty()) {
          if (relationTypeBuilder_.isEmpty()) {
            relationTypeBuilder_.dispose();
            relationTypeBuilder_ = null;
            relationType_ = other.relationType_;
            bitField0_ = (bitField0_ & ~0x00000002);
            relationTypeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRelationTypeFieldBuilder() : null;
          } else {
            relationTypeBuilder_.addAllMessages(other.relationType_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              page_ = input.readInt32();

              break;
            } // case 8
            case 16: {
              pageSize_ = input.readInt32();

              break;
            } // case 16
            case 26: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              fields__ = input.readMessage(
                  FieldsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableFields().getMutableMap().put(
                  fields__.getKey(), fields__.getValue());
              break;
            } // case 26
            case 32: {
              objectType_ = input.readInt32();

              break;
            } // case 32
            case 42: {
              obj.Relation m =
                  input.readMessage(
                      obj.Relation.parser(),
                      extensionRegistry);
              if (relationTypeBuilder_ == null) {
                ensureRelationTypeIsMutable();
                relationType_.add(m);
              } else {
                relationTypeBuilder_.addMessage(m);
              }
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int page_ ;
    /**
     * <code>int32 page = 1;</code>
     * @return The page.
     */
    @java.lang.Override
    public int getPage() {
      return page_;
    }
    /**
     * <code>int32 page = 1;</code>
     * @param value The page to set.
     * @return This builder for chaining.
     */
    public Builder setPage(int value) {
      
      page_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 page = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPage() {
      
      page_ = 0;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <code>int32 page_size = 2;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <code>int32 page_size = 2;</code>
     * @param value The pageSize to set.
     * @return This builder for chaining.
     */
    public Builder setPageSize(int value) {
      
      pageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 page_size = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPageSize() {
      
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> fields_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetFields() {
      if (fields_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FieldsDefaultEntryHolder.defaultEntry);
      }
      return fields_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableFields() {
      onChanged();;
      if (fields_ == null) {
        fields_ = com.google.protobuf.MapField.newMapField(
            FieldsDefaultEntryHolder.defaultEntry);
      }
      if (!fields_.isMutable()) {
        fields_ = fields_.copy();
      }
      return fields_;
    }

    public int getFieldsCount() {
      return internalGetFields().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    @java.lang.Override
    public boolean containsFields(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetFields().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getFields() {
      return getFieldsMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getFieldsMap() {
      return internalGetFields().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getFieldsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetFields().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getFieldsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetFields().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearFields() {
      internalGetMutableFields().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    public Builder removeFields(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableFields().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableFields() {
      return internalGetMutableFields().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */
    public Builder putFields(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableFields().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; fields = 3;</code>
     */

    public Builder putAllFields(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableFields().getMutableMap()
          .putAll(values);
      return this;
    }

    private int objectType_ ;
    /**
     * <code>int32 object_type = 4;</code>
     * @return The objectType.
     */
    @java.lang.Override
    public int getObjectType() {
      return objectType_;
    }
    /**
     * <code>int32 object_type = 4;</code>
     * @param value The objectType to set.
     * @return This builder for chaining.
     */
    public Builder setObjectType(int value) {
      
      objectType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 object_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearObjectType() {
      
      objectType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<obj.Relation> relationType_ =
      java.util.Collections.emptyList();
    private void ensureRelationTypeIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        relationType_ = new java.util.ArrayList<obj.Relation>(relationType_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        obj.Relation, obj.Relation.Builder, obj.RelationOrBuilder> relationTypeBuilder_;

    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public java.util.List<obj.Relation> getRelationTypeList() {
      if (relationTypeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(relationType_);
      } else {
        return relationTypeBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public int getRelationTypeCount() {
      if (relationTypeBuilder_ == null) {
        return relationType_.size();
      } else {
        return relationTypeBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public obj.Relation getRelationType(int index) {
      if (relationTypeBuilder_ == null) {
        return relationType_.get(index);
      } else {
        return relationTypeBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder setRelationType(
        int index, obj.Relation value) {
      if (relationTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationTypeIsMutable();
        relationType_.set(index, value);
        onChanged();
      } else {
        relationTypeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder setRelationType(
        int index, obj.Relation.Builder builderForValue) {
      if (relationTypeBuilder_ == null) {
        ensureRelationTypeIsMutable();
        relationType_.set(index, builderForValue.build());
        onChanged();
      } else {
        relationTypeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder addRelationType(obj.Relation value) {
      if (relationTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationTypeIsMutable();
        relationType_.add(value);
        onChanged();
      } else {
        relationTypeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder addRelationType(
        int index, obj.Relation value) {
      if (relationTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRelationTypeIsMutable();
        relationType_.add(index, value);
        onChanged();
      } else {
        relationTypeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder addRelationType(
        obj.Relation.Builder builderForValue) {
      if (relationTypeBuilder_ == null) {
        ensureRelationTypeIsMutable();
        relationType_.add(builderForValue.build());
        onChanged();
      } else {
        relationTypeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder addRelationType(
        int index, obj.Relation.Builder builderForValue) {
      if (relationTypeBuilder_ == null) {
        ensureRelationTypeIsMutable();
        relationType_.add(index, builderForValue.build());
        onChanged();
      } else {
        relationTypeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder addAllRelationType(
        java.lang.Iterable<? extends obj.Relation> values) {
      if (relationTypeBuilder_ == null) {
        ensureRelationTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relationType_);
        onChanged();
      } else {
        relationTypeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder clearRelationType() {
      if (relationTypeBuilder_ == null) {
        relationType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        relationTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public Builder removeRelationType(int index) {
      if (relationTypeBuilder_ == null) {
        ensureRelationTypeIsMutable();
        relationType_.remove(index);
        onChanged();
      } else {
        relationTypeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public obj.Relation.Builder getRelationTypeBuilder(
        int index) {
      return getRelationTypeFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public obj.RelationOrBuilder getRelationTypeOrBuilder(
        int index) {
      if (relationTypeBuilder_ == null) {
        return relationType_.get(index);  } else {
        return relationTypeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public java.util.List<? extends obj.RelationOrBuilder> 
         getRelationTypeOrBuilderList() {
      if (relationTypeBuilder_ != null) {
        return relationTypeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(relationType_);
      }
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public obj.Relation.Builder addRelationTypeBuilder() {
      return getRelationTypeFieldBuilder().addBuilder(
          obj.Relation.getDefaultInstance());
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public obj.Relation.Builder addRelationTypeBuilder(
        int index) {
      return getRelationTypeFieldBuilder().addBuilder(
          index, obj.Relation.getDefaultInstance());
    }
    /**
     * <code>repeated .object.Relation relation_type = 5;</code>
     */
    public java.util.List<obj.Relation.Builder> 
         getRelationTypeBuilderList() {
      return getRelationTypeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        obj.Relation, obj.Relation.Builder, obj.RelationOrBuilder> 
        getRelationTypeFieldBuilder() {
      if (relationTypeBuilder_ == null) {
        relationTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            obj.Relation, obj.Relation.Builder, obj.RelationOrBuilder>(
                relationType_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        relationType_ = null;
      }
      return relationTypeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:object.ListObjectsRequest)
  }

  // @@protoc_insertion_point(class_scope:object.ListObjectsRequest)
  private static final obj.ListObjectsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new obj.ListObjectsRequest();
  }

  public static obj.ListObjectsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListObjectsRequest>
      PARSER = new com.google.protobuf.AbstractParser<ListObjectsRequest>() {
    @java.lang.Override
    public ListObjectsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ListObjectsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListObjectsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public obj.ListObjectsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

