// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: proto/cmd/cmd.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ---------------- ENUMS ----------------
// ExecutionStatus represents the state of a command execution.
type ExecutionStatus int32

const (
	ExecutionStatus_EXECUTION_STATUS_UNKNOWN              ExecutionStatus = 0
	ExecutionStatus_EXECUTION_STATUS_PENDING              ExecutionStatus = 1
	ExecutionStatus_EXECUTION_STATUS_RUNNING              ExecutionStatus = 2
	ExecutionStatus_EXECUTION_STATUS_SUCCESS              ExecutionStatus = 3
	ExecutionStatus_EXECUTION_STATUS_FAILED               ExecutionStatus = 4
	ExecutionStatus_EXECUTION_STATUS_CANCELLED            ExecutionStatus = 5
	ExecutionStatus_EXECUTION_STATUS_CANCELLED_BY_TIMEOUT ExecutionStatus = 6
	ExecutionStatus_EXECUTION_STATUS_NOT_PERMITTED        ExecutionStatus = 7
	ExecutionStatus_EXECUTION_STATUS_EXECUTORS_NOT_FOUND  ExecutionStatus = 8
)

// Enum value maps for ExecutionStatus.
var (
	ExecutionStatus_name = map[int32]string{
		0: "EXECUTION_STATUS_UNKNOWN",
		1: "EXECUTION_STATUS_PENDING",
		2: "EXECUTION_STATUS_RUNNING",
		3: "EXECUTION_STATUS_SUCCESS",
		4: "EXECUTION_STATUS_FAILED",
		5: "EXECUTION_STATUS_CANCELLED",
		6: "EXECUTION_STATUS_CANCELLED_BY_TIMEOUT",
		7: "EXECUTION_STATUS_NOT_PERMITTED",
		8: "EXECUTION_STATUS_EXECUTORS_NOT_FOUND",
	}
	ExecutionStatus_value = map[string]int32{
		"EXECUTION_STATUS_UNKNOWN":              0,
		"EXECUTION_STATUS_PENDING":              1,
		"EXECUTION_STATUS_RUNNING":              2,
		"EXECUTION_STATUS_SUCCESS":              3,
		"EXECUTION_STATUS_FAILED":               4,
		"EXECUTION_STATUS_CANCELLED":            5,
		"EXECUTION_STATUS_CANCELLED_BY_TIMEOUT": 6,
		"EXECUTION_STATUS_NOT_PERMITTED":        7,
		"EXECUTION_STATUS_EXECUTORS_NOT_FOUND":  8,
	}
)

func (x ExecutionStatus) Enum() *ExecutionStatus {
	p := new(ExecutionStatus)
	*p = x
	return p
}

func (x ExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_cmd_cmd_proto_enumTypes[0].Descriptor()
}

func (ExecutionStatus) Type() protoreflect.EnumType {
	return &file_proto_cmd_cmd_proto_enumTypes[0]
}

func (x ExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStatus.Descriptor instead.
func (ExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{0}
}

// UserRole represents the role of a user in a group.
type UserRole int32

const (
	UserRole_USER_ROLE_VIEWER   UserRole = 0
	UserRole_USER_ROLE_EXECUTOR UserRole = 1
	UserRole_USER_ROLE_ADMIN    UserRole = 2
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "USER_ROLE_VIEWER",
		1: "USER_ROLE_EXECUTOR",
		2: "USER_ROLE_ADMIN",
	}
	UserRole_value = map[string]int32{
		"USER_ROLE_VIEWER":   0,
		"USER_ROLE_EXECUTOR": 1,
		"USER_ROLE_ADMIN":    2,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_cmd_cmd_proto_enumTypes[1].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_proto_cmd_cmd_proto_enumTypes[1]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{1}
}

// Group represents a group of users.
type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       uint64                 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{0}
}

func (x *Group) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// GroupsResponse is a wrapper for a list of groups.
type GroupsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*Group               `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupsResponse) Reset() {
	*x = GroupsResponse{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsResponse) ProtoMessage() {}

func (x *GroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsResponse.ProtoReflect.Descriptor instead.
func (*GroupsResponse) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{1}
}

func (x *GroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// GroupRequest is used to request a specific group by ID.
type GroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       uint64                 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupRequest) Reset() {
	*x = GroupRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRequest) ProtoMessage() {}

func (x *GroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRequest.ProtoReflect.Descriptor instead.
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{2}
}

func (x *GroupRequest) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// UserGroupRequest is used to add or remove a user from a group.
type UserGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId       uint64                 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Role          UserRole               `protobuf:"varint,3,opt,name=role,proto3,enum=cmd.UserRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserGroupRequest) Reset() {
	*x = UserGroupRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupRequest) ProtoMessage() {}

func (x *UserGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupRequest.ProtoReflect.Descriptor instead.
func (*UserGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{3}
}

func (x *UserGroupRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserGroupRequest) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *UserGroupRequest) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_VIEWER
}

type AddCommandToGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     uint64                 `protobuf:"varint,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	GroupId       uint64                 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommandToGroupRequest) Reset() {
	*x = AddCommandToGroupRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommandToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommandToGroupRequest) ProtoMessage() {}

func (x *AddCommandToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommandToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddCommandToGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{4}
}

func (x *AddCommandToGroupRequest) GetCommandId() uint64 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *AddCommandToGroupRequest) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type AddObjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []uint64               `protobuf:"varint,1,rep,packed,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"` // IDs of objects to add
	GroupId       uint64                 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`              // ID of the group to which objects are added
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddObjectsRequest) Reset() {
	*x = AddObjectsRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddObjectsRequest) ProtoMessage() {}

func (x *AddObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddObjectsRequest.ProtoReflect.Descriptor instead.
func (*AddObjectsRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{5}
}

func (x *AddObjectsRequest) GetObjectIds() []uint64 {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *AddObjectsRequest) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// ------------- COMMAND TEMPLATES -------------
// ParameterField describes a parameter for a command template.
type ParameterField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	DefaultValue  string                 `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Options       []string               `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	Required      bool                   `protobuf:"varint,7,opt,name=required,proto3" json:"required,omitempty"`
	Multiline     bool                   `protobuf:"varint,8,opt,name=multiline,proto3" json:"multiline,omitempty"`
	Disabled      bool                   `protobuf:"varint,9,opt,name=disabled,proto3" json:"disabled,omitempty"`       // Indicates if the field is disabled in the UI
	Placeholder   string                 `protobuf:"bytes,10,opt,name=placeholder,proto3" json:"placeholder,omitempty"` // Placeholder text for the field
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParameterField) Reset() {
	*x = ParameterField{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParameterField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterField) ProtoMessage() {}

func (x *ParameterField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParameterField.ProtoReflect.Descriptor instead.
func (*ParameterField) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{6}
}

func (x *ParameterField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ParameterField) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ParameterField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ParameterField) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ParameterField) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ParameterField) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ParameterField) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *ParameterField) GetMultiline() bool {
	if x != nil {
		return x.Multiline
	}
	return false
}

func (x *ParameterField) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *ParameterField) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

// Command represents a command template.
type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Fields        []*ParameterField      `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{7}
}

func (x *Command) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Command) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Command) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Command) GetFields() []*ParameterField {
	if x != nil {
		return x.Fields
	}
	return nil
}

// AddCommandRequest is used to add a new command template.
type AddCommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"` // Optional label for the command
	Fields        []*ParameterField      `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCommandRequest) Reset() {
	*x = AddCommandRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommandRequest) ProtoMessage() {}

func (x *AddCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommandRequest.ProtoReflect.Descriptor instead.
func (*AddCommandRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{8}
}

func (x *AddCommandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCommandRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddCommandRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AddCommandRequest) GetFields() []*ParameterField {
	if x != nil {
		return x.Fields
	}
	return nil
}

// CommandsResponse is a wrapper for a list of commands.
type CommandsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       uint64                 `protobuf:"varint,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"` // ID of the owner of the commands
	Commands      []*Command             `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandsResponse) Reset() {
	*x = CommandsResponse{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandsResponse) ProtoMessage() {}

func (x *CommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandsResponse.ProtoReflect.Descriptor instead.
func (*CommandsResponse) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{9}
}

func (x *CommandsResponse) GetOwnerId() uint64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *CommandsResponse) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

// CommandRequest is used to get, delete a command template.
type CommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{10}
}

func (x *CommandRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ------------- COMMAND EXECUTION -------------
// ExecuteRequest is used to execute a command.
type ExecuteRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CommandId          uint64                 `protobuf:"varint,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	OverrideParameters map[string]string      `protobuf:"bytes,2,rep,name=override_parameters,json=overrideParameters,proto3" json:"override_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{11}
}

func (x *ExecuteRequest) GetCommandId() uint64 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *ExecuteRequest) GetOverrideParameters() map[string]string {
	if x != nil {
		return x.OverrideParameters
	}
	return nil
}

// ExecuteResponse contains the result of a command execution request.
type ExecuteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   uint64                 `protobuf:"varint,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	QueueStatus   ExecutionStatus        `protobuf:"varint,2,opt,name=queue_status,json=queueStatus,proto3,enum=cmd.ExecutionStatus" json:"queue_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{12}
}

func (x *ExecuteResponse) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

func (x *ExecuteResponse) GetQueueStatus() ExecutionStatus {
	if x != nil {
		return x.QueueStatus
	}
	return ExecutionStatus_EXECUTION_STATUS_UNKNOWN
}

// CancelRequest is used to cancel a command execution.
type CancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   uint64                 `protobuf:"varint,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelRequest) Reset() {
	*x = CancelRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelRequest) ProtoMessage() {}

func (x *CancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelRequest.ProtoReflect.Descriptor instead.
func (*CancelRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{13}
}

func (x *CancelRequest) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

// CancelResponse indicates if a cancel operation was successful.
type CancelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelResponse) Reset() {
	*x = CancelResponse{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelResponse) ProtoMessage() {}

func (x *CancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelResponse.ProtoReflect.Descriptor instead.
func (*CancelResponse) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{14}
}

func (x *CancelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// RetryRequest is used to retry a command execution.
type RetryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   uint64                 `protobuf:"varint,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryRequest) Reset() {
	*x = RetryRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryRequest) ProtoMessage() {}

func (x *RetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryRequest.ProtoReflect.Descriptor instead.
func (*RetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{15}
}

func (x *RetryRequest) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

// DryRunResult contains the result of a dry run.
type DryRunResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     uint64                 `protobuf:"varint,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DryRunResult) Reset() {
	*x = DryRunResult{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResult) ProtoMessage() {}

func (x *DryRunResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunResult.ProtoReflect.Descriptor instead.
func (*DryRunResult) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{16}
}

func (x *DryRunResult) GetCommandId() uint64 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

// ------------- LOG STREAMING -------------
// SubscribeRequest is used to subscribe to logs.
type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint64                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                         // Page number for pagination
	PageSize      uint64                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Number of logs per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{17}
}

func (x *SubscribeRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SubscribeRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// CommandLog represents a log entry for a command execution.
type CommandLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   uint64                 `protobuf:"varint,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Output        string                 `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ResultCode    ExecutionStatus        `protobuf:"varint,4,opt,name=result_code,json=resultCode,proto3,enum=cmd.ExecutionStatus" json:"result_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandLog) Reset() {
	*x = CommandLog{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandLog) ProtoMessage() {}

func (x *CommandLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandLog.ProtoReflect.Descriptor instead.
func (*CommandLog) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{18}
}

func (x *CommandLog) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

func (x *CommandLog) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *CommandLog) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommandLog) GetResultCode() ExecutionStatus {
	if x != nil {
		return x.ResultCode
	}
	return ExecutionStatus_EXECUTION_STATUS_UNKNOWN
}

// ------------- STATUS UPDATE & EVENT SUBSCRIPTION -------------
// UpdateExecutionStatusRequest is used to update the status of a command execution.
type UpdateExecutionStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId   uint64                 `protobuf:"varint,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Status        ExecutionStatus        `protobuf:"varint,2,opt,name=status,proto3,enum=cmd.ExecutionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExecutionStatusRequest) Reset() {
	*x = UpdateExecutionStatusRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExecutionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExecutionStatusRequest) ProtoMessage() {}

func (x *UpdateExecutionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExecutionStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateExecutionStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateExecutionStatusRequest) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

func (x *UpdateExecutionStatusRequest) GetStatus() ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return ExecutionStatus_EXECUTION_STATUS_UNKNOWN
}

// UpdateExecutionStatusResponse indicates if the update was successful.
type UpdateExecutionStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExecutionStatusResponse) Reset() {
	*x = UpdateExecutionStatusResponse{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExecutionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExecutionStatusResponse) ProtoMessage() {}

func (x *UpdateExecutionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExecutionStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateExecutionStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateExecutionStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// SubscribeCommandEventsRequest is used to subscribe to command events.
type SubscribeCommandEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCommandEventsRequest) Reset() {
	*x = SubscribeCommandEventsRequest{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCommandEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCommandEventsRequest) ProtoMessage() {}

func (x *SubscribeCommandEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCommandEventsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCommandEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{21}
}

// CommandEvent represents an event related to a command execution.
type CommandEvent struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ExecutionId         uint64                 `protobuf:"varint,1,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	EffectiveParameters map[string]string      `protobuf:"bytes,2,rep,name=effective_parameters,json=effectiveParameters,proto3" json:"effective_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp           uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CommandEvent) Reset() {
	*x = CommandEvent{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandEvent) ProtoMessage() {}

func (x *CommandEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandEvent.ProtoReflect.Descriptor instead.
func (*CommandEvent) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{22}
}

func (x *CommandEvent) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

func (x *CommandEvent) GetEffectiveParameters() map[string]string {
	if x != nil {
		return x.EffectiveParameters
	}
	return nil
}

func (x *CommandEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Object represents a generic object with fields.
type Object struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields        map[string]string      `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Object) Reset() {
	*x = Object{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{23}
}

func (x *Object) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Object) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// UserGroupResponse is the response for user-group operations.
type UserGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId       uint64                 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Role          UserRole               `protobuf:"varint,3,opt,name=role,proto3,enum=cmd.UserRole" json:"role,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserGroupResponse) Reset() {
	*x = UserGroupResponse{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupResponse) ProtoMessage() {}

func (x *UserGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupResponse.ProtoReflect.Descriptor instead.
func (*UserGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{24}
}

func (x *UserGroupResponse) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserGroupResponse) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *UserGroupResponse) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_VIEWER
}

func (x *UserGroupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to add a contact.
type Contact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`      // The ID of the user to be added as a contact.
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"` // The email address of the user to be added as a contact.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{25}
}

func (x *Contact) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Contact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Empty is an empty message for RPCs that require no parameters.
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_cmd_cmd_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cmd_cmd_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_cmd_cmd_proto_rawDescGZIP(), []int{26}
}

var File_proto_cmd_cmd_proto protoreflect.FileDescriptor

const file_proto_cmd_cmd_proto_rawDesc = "" +
	"\n" +
	"\x13proto/cmd/cmd.proto\x12\x03cmd\"X\n" +
	"\x05Group\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\x04R\agroupId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"4\n" +
	"\x0eGroupsResponse\x12\"\n" +
	"\x06groups\x18\x01 \x03(\v2\n" +
	".cmd.GroupR\x06groups\")\n" +
	"\fGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\x04R\agroupId\"i\n" +
	"\x10UserGroupRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\x04R\agroupId\x12!\n" +
	"\x04role\x18\x03 \x01(\x0e2\r.cmd.UserRoleR\x04role\"T\n" +
	"\x18AddCommandToGroupRequest\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\x04R\tcommandId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\x04R\agroupId\"M\n" +
	"\x11AddObjectsRequest\x12\x1d\n" +
	"\n" +
	"object_ids\x18\x01 \x03(\x04R\tobjectIds\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\x04R\agroupId\"\xa7\x02\n" +
	"\x0eParameterField\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12#\n" +
	"\rdefault_value\x18\x04 \x01(\tR\fdefaultValue\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x18\n" +
	"\aoptions\x18\x06 \x03(\tR\aoptions\x12\x1a\n" +
	"\brequired\x18\a \x01(\bR\brequired\x12\x1c\n" +
	"\tmultiline\x18\b \x01(\bR\tmultiline\x12\x1a\n" +
	"\bdisabled\x18\t \x01(\bR\bdisabled\x12 \n" +
	"\vplaceholder\x18\n" +
	" \x01(\tR\vplaceholder\"|\n" +
	"\aCommand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\x06fields\x18\x04 \x03(\v2\x13.cmd.ParameterFieldR\x06fields\"\x8c\x01\n" +
	"\x11AddCommandRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\x12+\n" +
	"\x06fields\x18\x04 \x03(\v2\x13.cmd.ParameterFieldR\x06fields\"W\n" +
	"\x10CommandsResponse\x12\x19\n" +
	"\bowner_id\x18\x01 \x01(\x04R\aownerId\x12(\n" +
	"\bcommands\x18\x02 \x03(\v2\f.cmd.CommandR\bcommands\" \n" +
	"\x0eCommandRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\xd4\x01\n" +
	"\x0eExecuteRequest\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\x04R\tcommandId\x12\\\n" +
	"\x13override_parameters\x18\x02 \x03(\v2+.cmd.ExecuteRequest.OverrideParametersEntryR\x12overrideParameters\x1aE\n" +
	"\x17OverrideParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"m\n" +
	"\x0fExecuteResponse\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\x04R\vexecutionId\x127\n" +
	"\fqueue_status\x18\x02 \x01(\x0e2\x14.cmd.ExecutionStatusR\vqueueStatus\"2\n" +
	"\rCancelRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\x04R\vexecutionId\"*\n" +
	"\x0eCancelResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"1\n" +
	"\fRetryRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\x04R\vexecutionId\"-\n" +
	"\fDryRunResult\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\x04R\tcommandId\"C\n" +
	"\x10SubscribeRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x04R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x04R\bpageSize\"\x9c\x01\n" +
	"\n" +
	"CommandLog\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\x04R\vexecutionId\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x125\n" +
	"\vresult_code\x18\x04 \x01(\x0e2\x14.cmd.ExecutionStatusR\n" +
	"resultCode\"o\n" +
	"\x1cUpdateExecutionStatusRequest\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\x04R\vexecutionId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.cmd.ExecutionStatusR\x06status\"9\n" +
	"\x1dUpdateExecutionStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x1f\n" +
	"\x1dSubscribeCommandEventsRequest\"\xf6\x01\n" +
	"\fCommandEvent\x12!\n" +
	"\fexecution_id\x18\x01 \x01(\x04R\vexecutionId\x12]\n" +
	"\x14effective_parameters\x18\x02 \x03(\v2*.cmd.CommandEvent.EffectiveParametersEntryR\x13effectiveParameters\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x1aF\n" +
	"\x18EffectiveParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x01\n" +
	"\x06Object\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12/\n" +
	"\x06fields\x18\x02 \x03(\v2\x17.cmd.Object.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x01\n" +
	"\x11UserGroupResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\x04R\agroupId\x12!\n" +
	"\x04role\x18\x03 \x01(\x0e2\r.cmd.UserRoleR\x04role\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"/\n" +
	"\aContact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\"\a\n" +
	"\x05Empty*\xbf\x02\n" +
	"\x0fExecutionStatus\x12\x1c\n" +
	"\x18EXECUTION_STATUS_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18EXECUTION_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18EXECUTION_STATUS_RUNNING\x10\x02\x12\x1c\n" +
	"\x18EXECUTION_STATUS_SUCCESS\x10\x03\x12\x1b\n" +
	"\x17EXECUTION_STATUS_FAILED\x10\x04\x12\x1e\n" +
	"\x1aEXECUTION_STATUS_CANCELLED\x10\x05\x12)\n" +
	"%EXECUTION_STATUS_CANCELLED_BY_TIMEOUT\x10\x06\x12\"\n" +
	"\x1eEXECUTION_STATUS_NOT_PERMITTED\x10\a\x12(\n" +
	"$EXECUTION_STATUS_EXECUTORS_NOT_FOUND\x10\b*M\n" +
	"\bUserRole\x12\x14\n" +
	"\x10USER_ROLE_VIEWER\x10\x00\x12\x16\n" +
	"\x12USER_ROLE_EXECUTOR\x10\x01\x12\x13\n" +
	"\x0fUSER_ROLE_ADMIN\x10\x022\x81\n" +
	"\n" +
	"\x0eCommandService\x12-\n" +
	"\n" +
	"ListGroups\x12\n" +
	".cmd.Empty\x1a\x13.cmd.GroupsResponse\x12\"\n" +
	"\bAddGroup\x12\n" +
	".cmd.Group\x1a\n" +
	".cmd.Group\x12,\n" +
	"\vDeleteGroup\x12\x11.cmd.GroupRequest\x1a\n" +
	".cmd.Group\x12?\n" +
	"\x0eAddUserToGroup\x12\x15.cmd.UserGroupRequest\x1a\x16.cmd.UserGroupResponse\x12D\n" +
	"\x13RemoveUserFromGroup\x12\x15.cmd.UserGroupRequest\x1a\x16.cmd.UserGroupResponse\x12:\n" +
	"\fListCommands\x12\x13.cmd.CommandRequest\x1a\x15.cmd.CommandsResponse\x122\n" +
	"\n" +
	"AddCommand\x12\x16.cmd.AddCommandRequest\x1a\f.cmd.Command\x122\n" +
	"\rDeleteCommand\x12\x13.cmd.CommandRequest\x1a\f.cmd.Command\x12J\n" +
	"\x11AddCommandToGroup\x12\x1d.cmd.AddCommandToGroupRequest\x1a\x16.cmd.UserGroupResponse\x12G\n" +
	"\x16DeleteCommandFromGroup\x12\x15.cmd.UserGroupRequest\x1a\x16.cmd.UserGroupResponse\x12C\n" +
	"\x11AddObjectsToGroup\x12\x16.cmd.AddObjectsRequest\x1a\x16.cmd.UserGroupResponse\x12/\n" +
	"\x0eListExecutions\x12\n" +
	".cmd.Empty\x1a\x0f.cmd.CommandLog0\x01\x124\n" +
	"\aExecute\x12\x13.cmd.ExecuteRequest\x1a\x14.cmd.ExecuteResponse\x121\n" +
	"\x06Cancel\x12\x12.cmd.CancelRequest\x1a\x13.cmd.CancelResponse\x120\n" +
	"\x05Retry\x12\x11.cmd.RetryRequest\x1a\x14.cmd.ExecuteResponse\x120\n" +
	"\x06DryRun\x12\x13.cmd.ExecuteRequest\x1a\x11.cmd.DryRunResult\x12^\n" +
	"\x15UpdateExecutionStatus\x12!.cmd.UpdateExecutionStatusRequest\x1a\".cmd.UpdateExecutionStatusResponse\x12;\n" +
	"\rSubscribeLogs\x12\x15.cmd.SubscribeRequest\x1a\x0f.cmd.CommandLog(\x010\x01\x12@\n" +
	"\x16SubscribeCommandEvents\x12\x0f.cmd.CommandLog\x1a\x11.cmd.CommandEvent(\x010\x01\x12.\n" +
	"\x10AddMutualContact\x12\f.cmd.Contact\x1a\f.cmd.Contact\x121\n" +
	"\x13RemoveMutualContact\x12\f.cmd.Contact\x1a\f.cmd.Contact\x12)\n" +
	"\rShowMyContact\x12\n" +
	".cmd.Empty\x1a\f.cmd.ContactB\x1d\n" +
	"\x03cmdB\x03CmdP\x01Z\tcmd/proto\xa2\x02\x03CMDb\x06proto3"

var (
	file_proto_cmd_cmd_proto_rawDescOnce sync.Once
	file_proto_cmd_cmd_proto_rawDescData []byte
)

func file_proto_cmd_cmd_proto_rawDescGZIP() []byte {
	file_proto_cmd_cmd_proto_rawDescOnce.Do(func() {
		file_proto_cmd_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_cmd_cmd_proto_rawDesc), len(file_proto_cmd_cmd_proto_rawDesc)))
	})
	return file_proto_cmd_cmd_proto_rawDescData
}

var file_proto_cmd_cmd_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_cmd_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_proto_cmd_cmd_proto_goTypes = []any{
	(ExecutionStatus)(0),                  // 0: cmd.ExecutionStatus
	(UserRole)(0),                         // 1: cmd.UserRole
	(*Group)(nil),                         // 2: cmd.Group
	(*GroupsResponse)(nil),                // 3: cmd.GroupsResponse
	(*GroupRequest)(nil),                  // 4: cmd.GroupRequest
	(*UserGroupRequest)(nil),              // 5: cmd.UserGroupRequest
	(*AddCommandToGroupRequest)(nil),      // 6: cmd.AddCommandToGroupRequest
	(*AddObjectsRequest)(nil),             // 7: cmd.AddObjectsRequest
	(*ParameterField)(nil),                // 8: cmd.ParameterField
	(*Command)(nil),                       // 9: cmd.Command
	(*AddCommandRequest)(nil),             // 10: cmd.AddCommandRequest
	(*CommandsResponse)(nil),              // 11: cmd.CommandsResponse
	(*CommandRequest)(nil),                // 12: cmd.CommandRequest
	(*ExecuteRequest)(nil),                // 13: cmd.ExecuteRequest
	(*ExecuteResponse)(nil),               // 14: cmd.ExecuteResponse
	(*CancelRequest)(nil),                 // 15: cmd.CancelRequest
	(*CancelResponse)(nil),                // 16: cmd.CancelResponse
	(*RetryRequest)(nil),                  // 17: cmd.RetryRequest
	(*DryRunResult)(nil),                  // 18: cmd.DryRunResult
	(*SubscribeRequest)(nil),              // 19: cmd.SubscribeRequest
	(*CommandLog)(nil),                    // 20: cmd.CommandLog
	(*UpdateExecutionStatusRequest)(nil),  // 21: cmd.UpdateExecutionStatusRequest
	(*UpdateExecutionStatusResponse)(nil), // 22: cmd.UpdateExecutionStatusResponse
	(*SubscribeCommandEventsRequest)(nil), // 23: cmd.SubscribeCommandEventsRequest
	(*CommandEvent)(nil),                  // 24: cmd.CommandEvent
	(*Object)(nil),                        // 25: cmd.Object
	(*UserGroupResponse)(nil),             // 26: cmd.UserGroupResponse
	(*Contact)(nil),                       // 27: cmd.Contact
	(*Empty)(nil),                         // 28: cmd.Empty
	nil,                                   // 29: cmd.ExecuteRequest.OverrideParametersEntry
	nil,                                   // 30: cmd.CommandEvent.EffectiveParametersEntry
	nil,                                   // 31: cmd.Object.FieldsEntry
}
var file_proto_cmd_cmd_proto_depIdxs = []int32{
	2,  // 0: cmd.GroupsResponse.groups:type_name -> cmd.Group
	1,  // 1: cmd.UserGroupRequest.role:type_name -> cmd.UserRole
	8,  // 2: cmd.Command.fields:type_name -> cmd.ParameterField
	8,  // 3: cmd.AddCommandRequest.fields:type_name -> cmd.ParameterField
	9,  // 4: cmd.CommandsResponse.commands:type_name -> cmd.Command
	29, // 5: cmd.ExecuteRequest.override_parameters:type_name -> cmd.ExecuteRequest.OverrideParametersEntry
	0,  // 6: cmd.ExecuteResponse.queue_status:type_name -> cmd.ExecutionStatus
	0,  // 7: cmd.CommandLog.result_code:type_name -> cmd.ExecutionStatus
	0,  // 8: cmd.UpdateExecutionStatusRequest.status:type_name -> cmd.ExecutionStatus
	30, // 9: cmd.CommandEvent.effective_parameters:type_name -> cmd.CommandEvent.EffectiveParametersEntry
	31, // 10: cmd.Object.fields:type_name -> cmd.Object.FieldsEntry
	1,  // 11: cmd.UserGroupResponse.role:type_name -> cmd.UserRole
	28, // 12: cmd.CommandService.ListGroups:input_type -> cmd.Empty
	2,  // 13: cmd.CommandService.AddGroup:input_type -> cmd.Group
	4,  // 14: cmd.CommandService.DeleteGroup:input_type -> cmd.GroupRequest
	5,  // 15: cmd.CommandService.AddUserToGroup:input_type -> cmd.UserGroupRequest
	5,  // 16: cmd.CommandService.RemoveUserFromGroup:input_type -> cmd.UserGroupRequest
	12, // 17: cmd.CommandService.ListCommands:input_type -> cmd.CommandRequest
	10, // 18: cmd.CommandService.AddCommand:input_type -> cmd.AddCommandRequest
	12, // 19: cmd.CommandService.DeleteCommand:input_type -> cmd.CommandRequest
	6,  // 20: cmd.CommandService.AddCommandToGroup:input_type -> cmd.AddCommandToGroupRequest
	5,  // 21: cmd.CommandService.DeleteCommandFromGroup:input_type -> cmd.UserGroupRequest
	7,  // 22: cmd.CommandService.AddObjectsToGroup:input_type -> cmd.AddObjectsRequest
	28, // 23: cmd.CommandService.ListExecutions:input_type -> cmd.Empty
	13, // 24: cmd.CommandService.Execute:input_type -> cmd.ExecuteRequest
	15, // 25: cmd.CommandService.Cancel:input_type -> cmd.CancelRequest
	17, // 26: cmd.CommandService.Retry:input_type -> cmd.RetryRequest
	13, // 27: cmd.CommandService.DryRun:input_type -> cmd.ExecuteRequest
	21, // 28: cmd.CommandService.UpdateExecutionStatus:input_type -> cmd.UpdateExecutionStatusRequest
	19, // 29: cmd.CommandService.SubscribeLogs:input_type -> cmd.SubscribeRequest
	20, // 30: cmd.CommandService.SubscribeCommandEvents:input_type -> cmd.CommandLog
	27, // 31: cmd.CommandService.AddMutualContact:input_type -> cmd.Contact
	27, // 32: cmd.CommandService.RemoveMutualContact:input_type -> cmd.Contact
	28, // 33: cmd.CommandService.ShowMyContact:input_type -> cmd.Empty
	3,  // 34: cmd.CommandService.ListGroups:output_type -> cmd.GroupsResponse
	2,  // 35: cmd.CommandService.AddGroup:output_type -> cmd.Group
	2,  // 36: cmd.CommandService.DeleteGroup:output_type -> cmd.Group
	26, // 37: cmd.CommandService.AddUserToGroup:output_type -> cmd.UserGroupResponse
	26, // 38: cmd.CommandService.RemoveUserFromGroup:output_type -> cmd.UserGroupResponse
	11, // 39: cmd.CommandService.ListCommands:output_type -> cmd.CommandsResponse
	9,  // 40: cmd.CommandService.AddCommand:output_type -> cmd.Command
	9,  // 41: cmd.CommandService.DeleteCommand:output_type -> cmd.Command
	26, // 42: cmd.CommandService.AddCommandToGroup:output_type -> cmd.UserGroupResponse
	26, // 43: cmd.CommandService.DeleteCommandFromGroup:output_type -> cmd.UserGroupResponse
	26, // 44: cmd.CommandService.AddObjectsToGroup:output_type -> cmd.UserGroupResponse
	20, // 45: cmd.CommandService.ListExecutions:output_type -> cmd.CommandLog
	14, // 46: cmd.CommandService.Execute:output_type -> cmd.ExecuteResponse
	16, // 47: cmd.CommandService.Cancel:output_type -> cmd.CancelResponse
	14, // 48: cmd.CommandService.Retry:output_type -> cmd.ExecuteResponse
	18, // 49: cmd.CommandService.DryRun:output_type -> cmd.DryRunResult
	22, // 50: cmd.CommandService.UpdateExecutionStatus:output_type -> cmd.UpdateExecutionStatusResponse
	20, // 51: cmd.CommandService.SubscribeLogs:output_type -> cmd.CommandLog
	24, // 52: cmd.CommandService.SubscribeCommandEvents:output_type -> cmd.CommandEvent
	27, // 53: cmd.CommandService.AddMutualContact:output_type -> cmd.Contact
	27, // 54: cmd.CommandService.RemoveMutualContact:output_type -> cmd.Contact
	27, // 55: cmd.CommandService.ShowMyContact:output_type -> cmd.Contact
	34, // [34:56] is the sub-list for method output_type
	12, // [12:34] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_cmd_cmd_proto_init() }
func file_proto_cmd_cmd_proto_init() {
	if File_proto_cmd_cmd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_cmd_cmd_proto_rawDesc), len(file_proto_cmd_cmd_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cmd_cmd_proto_goTypes,
		DependencyIndexes: file_proto_cmd_cmd_proto_depIdxs,
		EnumInfos:         file_proto_cmd_cmd_proto_enumTypes,
		MessageInfos:      file_proto_cmd_cmd_proto_msgTypes,
	}.Build()
	File_proto_cmd_cmd_proto = out.File
	file_proto_cmd_cmd_proto_goTypes = nil
	file_proto_cmd_cmd_proto_depIdxs = nil
}
