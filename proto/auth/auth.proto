syntax = "proto3";

package auth;

import "google/protobuf/empty.proto";

option go_package = "auth/proto";
option java_multiple_files = true;
option java_package = "auth";
option java_outer_classname = "Auth";
option objc_class_prefix = "AUTH";

// ------------------- CORE MESSAGES -------------------
message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  uint64 user_id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  string device_name = 3;
}

message LinkDeviceRequest {
  string device_name = 1;
  string token = 2;
}

message LoginResponse {
  string token = 1;
}

// ------------------- INFO RESPONSES -------------------
message AppInfoResponse {
  string version = 1;
  bool is_logged_in = 2;
}

message Device {
  uint64 id = 1;
  string name = 2;
}

message UserInfoResponse {
  uint64 id = 1;
  string email = 2;
  repeated Device devices = 3;
}

// Message types for signaling
enum MessageType {
    UNKNOWN = 0;
    OFFER = 1;
    ANSWER = 2;
    ICE_CANDIDATE = 3;
    JOIN = 4;
    LINK = 5;
    NEW_DEVICE = 6;
    CONFIRM_NEW_DEVICE = 7;
    DELETE_DEVICE = 8;
}

// Generic signaling message
message SignalMessage {
    MessageType type = 1;
    uint64 source = 2;
    uint64 target = 3;
    string value = 4;
}

// Request wrapper for RPC
message SignalRequest {
    SignalMessage message = 1;
}

// Response wrapper for RPC
message SignalResponse {
    SignalMessage message = 1;
}


message DeleteDeviceRequest{
  uint64 id = 1;
}

// ------------------- SERVICE -------------------
service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc LinkDevice(LinkDeviceRequest) returns (LoginResponse);
  rpc GetAppInfo(google.protobuf.Empty) returns (AppInfoResponse);
  rpc GetUserInfo(google.protobuf.Empty) returns (UserInfoResponse);
  rpc Connect(stream SignalRequest) returns (stream SignalResponse);
  rpc DeleteDevice(DeleteDeviceRequest) returns (google.protobuf.Empty);
}
