syntax = "proto3";

package object;

option go_package = "object/proto";
option java_multiple_files = true;
option java_package = "obj";
option java_outer_classname = "Obj";
option objc_class_prefix = "OBJ";

// ------------------- CORE MESSAGES -------------------
enum ObjectType {
  UNKNOWN_OBJECT = 0;
  ITEM = 1;
  TYPE = 2;
  GROUP = 3;
  COMMAND = 4;
  USER = 5;
  EXECUTION = 6;
  RELATION = 7;
}

message Object {
  uint64 id = 1;
  ObjectType object_type = 2;
  uint64 version = 3;
  map<string, string> fields = 4;
}

// Single and plural responses
message ObjectResponse {
  Object object = 1;
}

message ObjectsResponse {
  repeated Object objects = 1;
}

// ------------------- CRUD REQUESTS -------------------
message CreateObjectRequest {
  map<string, string> fields = 1;
  repeated Relation relation = 2; // Optional relation for the object
}

message GetObjectRequest {
  uint64 object_id = 1;
}

message UpdateObjectRequest {
  uint64 object_id = 1;
  map<string, string> fields = 2;
  bool is_new = 3;
}

message DeleteObjectsFieldsRequest {
  repeated uint64 object_id = 1;
  map<string, string> fields = 2;
  bool is_new = 3;
  bool is_strict = 4;
}

// ------------------- BATCH/UNIQUE REQUESTS -------------------
message CreateObjectsRequest {
  map<string, string> fields = 1;
  uint32 count = 2;
  repeated Relation relation = 3; // Optional relations for the objects
}

message CreateObjectsUniqueRequest {
  repeated Object objects = 1;
}

message GetObjectsRequest {
  repeated uint64 object_id = 1;
}

message UpdateObjectsRequest {
  repeated uint64 object_id = 1;
  map<string, string> fields = 2;
  bool is_new = 3;
}

message UpdateObjectsUniqueRequest {
  repeated Object objects = 1;
}

// ------------------- LIST & PAGINATION -------------------
message ListObjectsRequest {
  int32 page = 1;
  int32 page_size = 2;
  map<string, string> fields = 3;
  int32 object_type = 4;
  repeated Relation relations = 5;
  bool is_ascending = 6;
}

message ListObjectsResponse {
  repeated Object objects = 1;
  int64 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
  int32 total_pages = 5;
}

// ------------------- ACTION/TRANSFER -------------------
message ExecuteActionRequest {
  uint64 action_id = 1;
  map<string, string> fields = 2;
}

message ExecuteActionsRequest{
  repeated ExecuteActionRequest actions = 1;
}

message ExecuteActionResponse {
  repeated Object objects = 1;
}

message TransferObjectsRequest {
  Object object = 1;
}

message TransferObjectsResponse {
  uint64 secret_transfer_id = 1;
}

message ReceiveObjectsResponse {
  repeated Object objects = 1;
}

// ------------------- SUBSCRIPTION/STREAMING -------------------

message SubscriptionResponse {
  repeated Object objects = 1;
}

message Empty{}
// Enumerate all actions
enum ActionType {
    UNKNOWN_ACTION = 0;

    // Object-level actions
    CREATE_OBJECT = 1;
    UPDATE_OBJECT = 2;
    DELETE_OBJECT = 3;
    READ_OBJECT = 4;

    // Field-level actions
    CREATE_FIELD = 10;
    UPDATE_FIELD = 11;
    DELETE_FIELD = 12;
    READ_FIELD = 13;

    // Value-level actions (char-based)
    CREATE_VALUE = 20;
    WRITE_VALUE = 21;
    READ_VALUE = 22;
    
    // Relation-level actions
    CREATE_RELATION = 30;
    DELETE_RELATION = 31;
    READ_RELATION = 32;

    BEGIN = 40;
    END = 41;
}
// ---- Synchronous Subscription ----
message ObjectAction {
    ActionType action = 1;       // field number = 1
    uint64 source_id = 2;        // field number = 2
    uint64 target_id = 3;        // field number = 3
    uint64 value_code = 4;       // field number = 4
}

message ObjectActions {
  repeated ObjectAction actions = 1;
}

message DiffByUser{
  uint64 user_id = 1;
  uint64 action_id = 2;
}

message DiffByUsers {
  repeated DiffByUser diffs = 1;
}

message Relation {
  uint64 id = 1;
  uint64 target_id = 2;
}

// ------------------- SERVICE -------------------
service ObjectService {
  // CRUD
  rpc CreateObject(CreateObjectRequest) returns (ObjectResponse);
  rpc GetObject(GetObjectRequest) returns (ObjectResponse);
  rpc UpdateObject(UpdateObjectRequest) returns (ObjectResponse);
  rpc DeleteObjectField(DeleteObjectsFieldsRequest) returns (ObjectResponse);

  // Batch/Unique
  rpc CreateObjects(CreateObjectsRequest) returns (ObjectsResponse);
  rpc GetObjects(GetObjectsRequest) returns (ObjectsResponse);
  rpc UpdateObjects(UpdateObjectsRequest) returns (ObjectsResponse);
  rpc CreateObjectsUnique(CreateObjectsUniqueRequest) returns (ObjectsResponse);
  rpc UpdateObjectsUnique(UpdateObjectsUniqueRequest) returns (ObjectsResponse);

  // List & Pagination
  rpc ListObjects(ListObjectsRequest) returns (ListObjectsResponse);


  // Action/Transfer
  rpc ExecuteAction(ExecuteActionRequest) returns (ExecuteActionResponse);
  rpc ExecuteActions(ExecuteActionsRequest) returns (ExecuteActionResponse);
  rpc TransferObjects(TransferObjectsRequest) returns (TransferObjectsResponse);
  rpc ReceiveObjects(TransferObjectsResponse) returns (ReceiveObjectsResponse);

  // Streaming/Subscription
  rpc SubscribeToUsersObjects(Empty) returns (stream SubscriptionResponse);
  rpc SubscribeToMyself(Empty) returns (stream Object);
  rpc SyncWithUsers(DiffByUsers) returns (stream ObjectActions);
  rpc Sync(stream ObjectActions) returns (stream ObjectActions);

  // Get object commands
  rpc GetObjectCommands(GetObjectRequest) returns (ObjectsResponse);
}
